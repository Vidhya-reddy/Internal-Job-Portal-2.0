@model IJPMvcApp.Models.AspNetUserRole

@{
    ViewData["Title"] = "CreateUserRole";
}
<div class="container">
<h1>CreateUserRole</h1>

<h4>AspNetUserRole</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="CreateUserRole">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="UserId" class="control-label"></label>
               <select asp-for="UserId" class="form-control">
                        <option value=""><--Select User--></option>
                    @foreach (SelectListItem users in await Helper.GetUsers())
                    {
                        <option value="@users.Value">@users.Text</option>
                    }
                </select>
                <span asp-validation-for="UserId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="RoleId" class="control-label"></label>
               <select asp-for="RoleId" class="form-control">
                        <option value=""><--Select Role--></option>
                    @foreach (SelectListItem roles in await Helper.GetRoles())
                    {
                        <option value="@roles.Value">@roles.Text</option>
                    }
                </select>
                <span asp-validation-for="RoleId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>
</div>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
